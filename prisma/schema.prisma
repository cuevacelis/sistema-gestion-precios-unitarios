generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model cliente {
  Cli_Id              Int            @id(map: "PK_cliente") @default(autoincrement())
  Cli_NomApeRazSocial String         @db.VarChar(500)
  Cli_Abreviatura     String         @db.VarChar(100)
  Cli_NumDocumento    String         @db.VarChar(12)
  TipDoc_Id           Int
  Cli_Estado          Int            @default(1, map: "DF_cliente_Cli_Estado") @db.TinyInt
  tipo_documento      tipo_documento @relation(fields: [TipDoc_Id], references: [TipDoc_Id], onUpdate: NoAction, map: "FK_cliente_tipo_documento")
  presupuesto         presupuesto[]
}

model detalle_partida_recurso {
  DetParRec_Id Int     @id(map: "PK_detalle_partida_recurso") @default(autoincrement())
  Par_Id       Int
  Rec_Id       Int
  partida      partida @relation(fields: [Par_Id], references: [Par_Id], onUpdate: NoAction, map: "FK_detalle_partida_recurso_partida")
  recurso      recurso @relation(fields: [Rec_Id], references: [Rec_Id], onUpdate: NoAction, map: "FK_detalle_partida_recurso_recurso")
}

model detalle_rol_modulo {
  DetRolMod_Id     Int    @id(map: "PK_detalle_rol_modulo") @default(autoincrement())
  Rol_Id           Int
  Mod_Id           Int
  DetRolMod_Estado Int    @default(1, map: "DF_detalle_rol_modulo_DetRolMod_Estado") @db.TinyInt
  modulo           modulo @relation(fields: [Mod_Id], references: [Mod_Id], onUpdate: NoAction, map: "FK_detalle_rol_modulo_modulo")
  rol              rol    @relation(fields: [Rol_Id], references: [Rol_Id], onUpdate: NoAction, map: "FK_detalle_rol_modulo_rol")
}

model grupo_partida {
  GruPar_Id            Int                  @id(map: "PK_sub_presupuesto") @default(autoincrement())
  NomGruPar_Id         Int
  GruPar_Total         Decimal?             @db.Decimal(18, 0)
  GruParPadre_Id       Int?
  Pre_Id               Int
  grupo_partida        grupo_partida?       @relation("grupo_partidaTogrupo_partida", fields: [GruParPadre_Id], references: [GruPar_Id], onDelete: NoAction, onUpdate: NoAction, map: "FK__grupo_par__GruPa__44952D46")
  other_grupo_partida  grupo_partida[]      @relation("grupo_partidaTogrupo_partida")
  nombre_grupo_partida nombre_grupo_partida @relation(fields: [NomGruPar_Id], references: [NomGruPar_Id], onUpdate: NoAction, map: "FK__grupo_par__NomGr__56B3DD81")
  presupuesto          presupuesto          @relation(fields: [Pre_Id], references: [Pre_Id], onUpdate: NoAction, map: "FK__grupo_par__Pre_I__4589517F")
  partida              partida[]
}

model modulo {
  Mod_Id             Int                  @id(map: "PK_modulo") @default(autoincrement())
  Mod_Nombre         String               @db.VarChar(100)
  Mod_Estado         Int                  @default(1, map: "DF_modulo_Mod_Estado") @db.TinyInt
  detalle_rol_modulo detalle_rol_modulo[]
}

model nombre_grupo_partida {
  NomGruPar_Id     Int             @id(map: "PK__unidad_m__3E5A5CCB499FDD75") @default(autoincrement())
  NomGruPar_Nombre String          @db.VarChar(500)
  grupo_partida    grupo_partida[]
}

model partida {
  Par_Id                    Int                       @id(map: "PK_partida") @default(autoincrement())
  Par_Item                  String                    @db.VarChar(50)
  Par_Nombre                String                    @db.VarChar(50)
  UniMedRen_Id              Int
  Par_RenManObra            Decimal                   @db.Decimal(18, 0)
  Par_RenEquipo             Decimal                   @db.Decimal(18, 0)
  UniMed_Id                 Int
  Par_PreUnitario           Decimal?                  @db.Decimal(18, 0)
  GruPar_Id                 Int
  Par_Estado                Int                       @default(1, map: "DF_partida_Par_Estado") @db.TinyInt
  detalle_partida_recurso   detalle_partida_recurso[]
  grupo_partida             grupo_partida             @relation(fields: [GruPar_Id], references: [GruPar_Id], onUpdate: NoAction, map: "FK__partida__GruPar___467D75B8")
  unidad_medida             unidad_medida             @relation(fields: [UniMed_Id], references: [UniMed_Id], onUpdate: NoAction, map: "FK_partida_unidad_medida")
  unidad_medida_rendimiento unidad_medida_rendimiento @relation(fields: [UniMedRen_Id], references: [UniMedRen_Id], onUpdate: NoAction, map: "FK_partida_unidad_medida_rendimiento")
}

model presupuesto {
  Pre_Id             Int             @id(map: "PK_presupuesto") @default(autoincrement())
  Pre_Codigo         String?         @db.VarChar(50)
  Usu_Id             Int
  Pre_Nombre         String          @db.VarChar(500)
  Cli_Id             Int
  Ubi_Id             Int
  Pre_Jornal         Decimal         @db.Decimal(18, 2)
  Pre_FecHorRegistro DateTime        @default(now(), map: "DF_presupuesto_Pre_FecHorRegistro") @db.DateTime
  Pre_Estado         Int             @default(1, map: "DF_presupuesto_Pre_Estado") @db.TinyInt
  grupo_partida      grupo_partida[]
  cliente            cliente         @relation(fields: [Cli_Id], references: [Cli_Id], onUpdate: NoAction, map: "FK__presupues__Cli_I__1A9EF37A")
  ubicacion          ubicacion       @relation(fields: [Ubi_Id], references: [Ubi_Id], onUpdate: NoAction, map: "FK__presupues__Ubi_I__19AACF41")
  usuario            usuario         @relation(fields: [Usu_Id], references: [Usu_Id], onUpdate: NoAction, map: "FK_presupuesto_usuario")
}

model recurso {
  Rec_Id                  Int                       @id(map: "PK_recurso") @default(autoincrement())
  Rec_Nombre              String                    @db.VarChar(100)
  TipRec_Id               Int
  UniMedRec_Id            Int
  Rec_Cuadrilla           Decimal                   @db.Decimal(18, 0)
  Rec_Cantidad            Decimal                   @db.Decimal(18, 0)
  Rec_Precio              Decimal?                  @db.Decimal(18, 0)
  Rec_Parcial             Decimal?                  @db.Decimal(18, 0)
  Rec_Estado              Int                       @default(1, map: "DF_recurso_Rec_Estado") @db.TinyInt
  detalle_partida_recurso detalle_partida_recurso[]
  tipo_recurso            tipo_recurso              @relation(fields: [TipRec_Id], references: [TipRec_Id], onUpdate: NoAction, map: "FK_recurso_tipo_recurso")
  unidad_medida_recurso   unidad_medida_recurso     @relation(fields: [UniMedRec_Id], references: [UniMedRec_Id], onUpdate: NoAction, map: "FK_recurso_unidad_medida_recurso")
}

model rol {
  Rol_Id             Int                  @id(map: "PK_rol") @default(autoincrement())
  Rol_Nombre         String               @db.VarChar(50)
  Rol_Estado         Int                  @default(1, map: "DF_rol_Rol_Estado") @db.TinyInt
  detalle_rol_modulo detalle_rol_modulo[]
  usuario            usuario[]
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B61A842D780") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}

model tipo_documento {
  TipDoc_Id     Int       @id(map: "PK_tipo_documento") @default(autoincrement())
  TipDoc_Nombre String    @db.VarChar(50)
  cliente       cliente[]
}

model tipo_recurso {
  TipRec_Id     Int       @id(map: "PK_tipo_recurso") @default(autoincrement())
  TipRec_Nombre String    @db.VarChar(100)
  recurso       recurso[]
}

model ubicacion {
  Ubi_Id           Int           @id(map: "PK__ubicacio__40E1F317CBBEEB9F")
  Ubi_Departamento String        @db.NVarChar(100)
  Ubi_Provincia    String        @db.NVarChar(100)
  Ubi_Distrito     String        @db.NVarChar(100)
  presupuesto      presupuesto[]
}

model unidad_medida {
  UniMed_Id          Int       @id(map: "PK_unidad_medida") @default(autoincrement())
  UniMed_Nombre      String    @db.VarChar(50)
  UniMed_Abreviatura String    @db.VarChar(50)
  UniMed_Estado      Int       @default(1, map: "DF_unidad_medida_UniMed_Estado") @db.TinyInt
  partida            partida[]
}

model unidad_medida_recurso {
  UniMedRec_Id          Int       @id(map: "PK_unidad_medida_recurso") @default(autoincrement())
  UniMedRec_Nombre      String    @db.VarChar(100)
  UniMedRec_Abreviatura Bytes     @db.VarBinary(50)
  UniMedRec_Estado      Int       @default(1, map: "DF_unidad_medida_recurso_UniMedRec_Estado") @db.TinyInt
  recurso               recurso[]
}

model unidad_medida_rendimiento {
  UniMedRen_Id          Int       @id(map: "PK_unidad_medida_rendimiento") @default(autoincrement())
  UniMedRen_Nombre      String    @db.VarChar(50)
  UniMedRen_Abreviatura String    @db.VarChar(50)
  UniMedRen_Estado      Int       @default(1, map: "DF_unidad_medida_rendimiento_UniMedRen_Estado") @db.TinyInt
  partida               partida[]
}

model usuario {
  Usu_Id                      Int           @id(map: "PK_usuario") @default(autoincrement())
  Usu_Correo                  String        @db.VarChar(50)
  Usu_Clave                   String        @db.VarChar(50)
  Usu_NomApellidos            String        @db.VarChar(500)
  Rol_Id                      Int
  Usu_FecHoraRegistro         DateTime      @default(now(), map: "DF__usuario__Usu_Fec__5224328E") @db.DateTime
  Usu_Observacion             String?       @db.VarChar(500)
  Usu_Estado                  Int           @default(1, map: "DF_usuario_Usu_Estado") @db.TinyInt
  Usu_TokenActualizado        String?       @db.NVarChar(Max)
  Usu_FecHoraTokenActualizado DateTime?     @db.DateTime
  presupuesto                 presupuesto[]
  rol                         rol           @relation(fields: [Rol_Id], references: [Rol_Id], onUpdate: NoAction, map: "FK_usuario_rol")
}
